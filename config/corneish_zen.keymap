#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    default_layer {
      label = "QWERTY";
// -------------------------------------------------------------------------------
// |  ALT |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | ALT  |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  | CTRL |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | SHFT |
//                    | FUN | SPC | NUM |   | RET | BSP | GUI |
      bindings = <
&kp LALT  &kp Q &kp W &kp E &kp R     &kp T   &kp Y   &kp U    &kp I     &kp O   &kp P    &kp RALT
&kp LCTRL &kp A &kp S &kp D &kp F     &kp G   &kp H   &kp J    &kp K     &kp L   &kp SEMI &kp RCTRL
&kp LSHFT &kp Z &kp X &kp C &kp V     &kp B   &kp N   &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                      &mo 2 &kp SPACE &mo 1   &mo RET &kp BSPC &kp LGUI
      >;
    };

    numsym_layer {
      label = "NUMNAV";
// -------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   | HOM | PDN | PUP | END |  `  |      |
// |      |  6  |  7  |  8  |  9  |  0  |   | LFT | DWN |  UP | RGT |  '  |      |
// |      | ESC |  -  |  =  |  [  |  ]  |   | BR- | VO- | VO+ | BR+ |  \  |      |
//                    |     | INS |     |   | MUT | DEL |     |
      bindings = <
&trans &kp N1  &kp N2    &kp N3    &kp N4   &kp N5     &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &kp GRAVE &trans
&trans &kp N6  &kp N7    &kp N8    &kp N9   &kp N0     &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp SQT   &trans
&trans &kp ESC &kp MINUS &kp EQUAL &kp LBKT &kp RBKT   &kp C_BRI_DN &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_UP &kp BSLH  &trans
                         &trans    &kp INS  &trans     &kp C_MUTE   &kp DEL      &trans
      >;
    };

    functs_layer {
      label = "FUNPAD";
// -------------------------------------------------------------------------------
// |      | F1  | F2  | F3  | F4  | F5  |   | KP/ | KP7 | KP8 | KP9 | KP* |      |
// |      | F6  | F7  | F8  | F9  | F10 |   | KP- | KP4 | KP5 | KP6 | KP+ |      |
// |      | F11 | F12 | TAB | PS  | PAU |   | KP= | KP1 | KP2 | KP3 | KP. |      |
//                    |     | RET |     |   | ENT | KP0 |     |
      bindings = <
&trans &kp F1  &kp F2  &kp F3  &kp F4    &kp F5            &kp KP_DIVIDE &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MULTIPLY &trans
&trans &kp F6  &kp F7  &kp F8  &kp F9    &kp F10           &kp KP_MINUS  &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS     &trans
&trans &kp F11 &kp F12 &kp TAB &kp PSCRN &kp PAUSE_BREAK   &kp KP_EQUAL  &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT      &trans
                    	 &trans  &kp RET   &trans            &kp KP_ENTER  &kp KP_N0 &trans
      >;
    };

    progrm_layer {
      label = "PROGRM";
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
      bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &trans
&trans     &trans       &trans       &trans       &trans       &trans         &trans &trans &trans &trans &trans &trans
&trans     &trans       &trans       &trans       &trans       &trans         &trans &trans &trans &trans &trans &trans
                                     &trans       &trans       &trans         &trans &trans &trans
      >;
    };
  };
};
